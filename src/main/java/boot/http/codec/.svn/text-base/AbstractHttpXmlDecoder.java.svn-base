package boot.http.codec;

import io.netty.buffer.ByteBuf;
import io.netty.channel.ChannelHandlerContext;
import io.netty.handler.codec.MessageToMessageDecoder;
import tf.epccfe.sys.Sys;
import tf.epccfe.sys.SysInfo;
import boot.pkg.EpccfeBody;
import boot.pkg.EpccfePkg;

import common.sys.TxThreadLogger;
import common.sys.TxThreadLoggerFactory;

/**
 * @author RockChan
 * @date 2017.08.23
 * @version 1.0
 */
public abstract class AbstractHttpXmlDecoder<T> extends
		MessageToMessageDecoder<T> {
	private TxThreadLogger txLogger = TxThreadLoggerFactory.getInstance(AbstractHttpXmlDecoder.class, true);

	protected Object decode0(ChannelHandlerContext arg0, ByteBuf msg)
			throws Exception {
		String content = msg.toString(Sys.UTF_8);
		
		if (SysInfo.MonitorFlag) {
			txLogger.debug("HTTP服务端接收到请求（或响应）报文：" + content);
    	}
		
		EpccfePkg epccfePkg = new EpccfePkg();
		if (content.length() > "</root>".length()) {
			int rootB = content.indexOf("<root");
			int rootE = content.lastIndexOf("</root>");
			String pkgXml = content.substring(rootB, rootE + 7);
			EpccfeBody epccfeBody = new EpccfeBody();
			epccfeBody.setPkgXml(pkgXml);
			content = content.substring(rootE + 7);
			int idx = content.lastIndexOf("{S:");
	        if (idx >= 0) {
	            int sB = content.lastIndexOf("{S:");
	            int sE = content.lastIndexOf("}");
	            String pkgS = content.substring(sB, sE + 1);
				String sValue = pkgS.substring(3, pkgS.lastIndexOf("}"));
				epccfeBody.setPkgS(pkgS);
				epccfeBody.setsValue(sValue);
	        } else {
	        	epccfeBody.setPkgS("");
	        	epccfeBody.setsValue("");
	        }
			int msgHeaderB = pkgXml.indexOf("<MsgHeader>");
			int msgHeaderE = pkgXml.lastIndexOf("</MsgHeader>");
			String msgHeaderXml = pkgXml.substring(msgHeaderB, msgHeaderE + 12);
			epccfeBody.setMsgHeaderXml(msgHeaderXml);
			int msgBodyB = pkgXml.indexOf("<MsgBody>");
			int msgBodyE = pkgXml.lastIndexOf("</MsgBody>");
			String msgBodyXml = pkgXml.substring(msgBodyB, msgBodyE + 10);
			epccfeBody.setMsgBodyXml(msgBodyXml);
			epccfePkg.setPkgBody(epccfeBody);
			epccfePkg.setTxThreadSerial(txLogger.getTxThreadSerial());

			if (SysInfo.MonitorFlag) {
		        txLogger.debug("HTTP服务端接收请求（或响应）报文解析正常！");
	    	}
		}
		return epccfePkg;
	}
}
